{"version":3,"sources":["component/card/card.js","component/home/homePage.js","stateProvider.js","component/header/header.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["Card","props","className","src","image","loading","alt","width","height","data","name","abv","ibu","style","ounces","Home","useState","apiData","setApiData","imageData","setImageData","inputBox","setInputBox","page","setPage","useEffect","axios","get","then","res","catch","err","alert","Grid","container","spacing","item","xs","md","TextField","id","label","value","fullWidth","onChange","e","target","variant","Pagination","count","length","shape","event","slice","filter","beerObject","toLowerCase","includes","map","beer","index","key","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","Header","userTheme","dispatch","FormControlLabel","control","Switch","checked","type","App","theme","React","useMemo","createMuiTheme","palette","ThemeProvider","CssBaseline","exact","path","component","Boolean","window","location","hostname","match","console","log","state","action","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5b5444b1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.modules.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"cardMain\">\r\n      <img\r\n        className=\"cardImage\"\r\n        src={props.image}\r\n        loading=\"lazy\"\r\n        alt=\"Beer image\"\r\n        width=\"500\"\r\n        height=\"600\"\r\n      ></img>\r\n      <div className=\"cardData\">\r\n        <div>\r\n          <h2>\r\n            {\" \"}\r\n            <span>Name:</span>\r\n            {props.data.name}\r\n          </h2>\r\n        </div>\r\n        <div>\r\n          <h2>\r\n            {\" \"}\r\n            <span>Abv:</span>\r\n            {props.data.abv}\r\n          </h2>\r\n        </div>\r\n        <div>\r\n          <h2>\r\n            {\" \"}\r\n            <span>Ibu:</span>\r\n            {props.data.ibu}\r\n          </h2>\r\n        </div>\r\n        <div>\r\n          <h2>\r\n            <span>Style:</span>\r\n            {props.data.style}\r\n          </h2>\r\n        </div>\r\n        <div>\r\n          <h2>\r\n            <span>Ounces:</span>\r\n            {props.data.ounces}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\nimport Card from \"../card/card\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport \"./homePage.modules.css\";\r\n\r\nfunction Home() {\r\n  const [apiData, setApiData] = useState([]);\r\n  const [imageData, setImageData] = useState([]);\r\n  const [inputBox, setInputBox] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const beerData = () => {\r\n    axios\r\n      .get(\r\n        `https://s3-ap-southeast-1.amazonaws.com/he-public-data/beercraft5bac38c.json`\r\n      )\r\n      .then((res) => {\r\n        setApiData(res.data);\r\n      })\r\n      .catch((err) => alert(err));\r\n  };\r\n  const getImageData = () => {\r\n    axios\r\n      .get(\r\n        `https://s3-ap-southeast-1.amazonaws.com/he-public-data/beerimages7e0480d.json`\r\n      )\r\n      .then((res) => {\r\n        setImageData(res.data);\r\n      })\r\n      .catch((err) => alert(err));\r\n  };\r\n  useEffect(() => {\r\n    getImageData();\r\n    beerData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"homepageMain\">\r\n      <div className=\"homepageSearch\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={4}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Search beer by name\"\r\n              value={inputBox}\r\n              fullWidth\r\n              onChange={(e) => setInputBox(e.target.value)}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className=\"homepage_pagination\">\r\n        <Pagination\r\n          count={apiData.length}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          page={page}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <Grid container spacing={2}>\r\n        {apiData\r\n          .slice((page - 1) * 20, page * 20)\r\n          .filter((beerObject) =>\r\n            beerObject.name.toLowerCase().includes(inputBox)\r\n          )\r\n          .map((beer, index) => (\r\n            <Grid key={beer.id} item xs={12}>\r\n              <Card image={imageData?.[index % 5].image} data={beer} />\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React from \"react\";\r\nimport \"./header.modules.css\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { useStateValue } from \"../../stateProvider\";\r\n\r\nfunction Header() {\r\n  const [{ userTheme }, dispatch] = useStateValue();\r\n\r\n  const handleChange = (e) => {\r\n    dispatch({\r\n      type: \"SET_THEME\",\r\n      item: e.target.checked,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"header_main\">\r\n      <img\r\n        className=\"logo_image\"\r\n        src=\"https://rebelfoods.co/assets/rebelLogo.png\"\r\n        alt=\"\"\r\n      />\r\n\r\n      <div>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch checked={userTheme} onChange={handleChange} name=\"dark\" />\r\n          }\r\n          label=\"Dark Mode\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport Home from \"./component/home/homePage\";\nimport Header from \"./component/header/header\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { useStateValue } from \"./stateProvider\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  const [{ userTheme }] = useStateValue();\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: userTheme ? \"dark\" : \"light\",\n        },\n      }),\n    [userTheme]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  userTheme: true,\r\n};\r\nconsole.log(initialState);\r\nconst reducer = (state, action) => {\r\n  console.log({ action });\r\n  switch (action.type) {\r\n    case \"SET_THEME\":\r\n      return {\r\n        ...state,\r\n        userTheme: action.item,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./stateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}